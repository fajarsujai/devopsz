stages:
- preparation
- build
- release
- deploy

variables:
  PORT: 8000


job_prepare:
  stage: preparation
  script:
  - echo "Project name -> '$CI_PROJECT_NAME'"
  - echo "Branch name -> '$CI_COMMIT_BRANCH'"
  - echo "Commit_id -> '$CI_COMMIT_SHA'"
  - echo "Coder -> $CI_COMMIT_AUTHOR"
  - echo "Description -> $CI_COMMIT_MESSAGE"

job_build_staging:
  stage: build
  script:
  - zdBuild ${CI_PROJECT_NAME} ${CI_COMMIT_SHA} ${PORT}
  # Run this job in a branch where a Dockerfile exists
  rules:
  - if: '$CI_COMMIT_BRANCH == "main"'
  - if: $CI_COMMIT_BRANCH
    exists:
    - Dockerfile

job_build_production:
  stage: build
  script:
  - zdBuild ${CI_PROJECT_NAME} ${CI_COMMIT_TAG} ${PORT}
  # Run this job in a branch where a Dockerfile exists
  rules:
  - if: '$CI_COMMIT_TAG != null'
  - if: $CI_COMMIT_TAG
    exists:
    - Dockerfile


job_release_staging:
  stage: release
  script:
  - zdRelease ${CI_PROJECT_NAME} ${CI_COMMIT_SHA}
  rules:
  - if: '$CI_COMMIT_BRANCH == "main"'


job_release_production:
  stage: release
  script:
  - zdRelease ${CI_PROJECT_NAME} ${CI_COMMIT_TAG}
  rules:
  - if: '$CI_COMMIT_TAG != null'


job_deploy_staging:
  stage: deploy
  script:
  - zdDeploy ${CI_PROJECT_NAME} ${CI_COMMIT_SHA} ${PORT}
  rules:
  - if: '$CI_COMMIT_BRANCH == "main"'

job_deploy_production:
  stage: deploy
  script:
  - zdDeploy ${CI_PROJECT_NAME} ${CI_COMMIT_TAG} ${PORT}
  rules:
  - if: '$CI_COMMIT_TAG != null'



