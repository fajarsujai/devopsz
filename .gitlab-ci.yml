stages:
- preparation
- build
- release
- deploy

variables:
  PORT: 8000


job_prepare:
  stage: preparation
  script:
  - echo "Project name -> '$CI_PROJECT_NAME'"
  - echo "Branch name -> '$CI_COMMIT_BRANCH'"
  - echo "Commit_id -> '$CI_COMMIT_SHA'"
  - echo "Coder -> $CI_COMMIT_AUTHOR"
  - echo "Description -> $CI_COMMIT_MESSAGE"

job_build:
  stage: build
  script:
  - zdBuild ${CI_PROJECT_NAME} ${CI_COMMIT_SHA} ${PORT}
  # - docker build -t ${REGISTRY_CONTAINER}/$CI_PROJECT_NAME:$CI_COMMIT_SHA .
  # Run this job in a branch where a Dockerfile exists
  rules:
  - if: $CI_COMMIT_BRANCH
    exists:
    - Dockerfile

job_release:
  stage: release
  script:
  # - docker push ${REGISTRY_CONTAINER}/$CI_PROJECT_NAME:$CI_COMMIT_SHA
  - zdRelease ${CI_PROJECT_NAME} ${CI_COMMIT_SHA}
  # - |
  #   if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
  #     docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
  #     docker push "$CI_REGISTRY_IMAGE:latest"
  #   fi


job_deploy:
  stage: deploy
  script:
  - zdDeploy ${CI_PROJECT_NAME} ${CI_COMMIT_SHA} ${PORT}
